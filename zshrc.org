#+TITLE: zshrc
#+PROPERTY: header-args :tangle ~/.zshrc
* Table of contents :toc:
- [[#initialize-zinit][Initialize Zinit]]
- [[#manual-way-to-install-plugins][Manual way to install plugins]]
- [[#setting-paths][Setting paths]]
  - [[#localbin][~~/.local/bin/~]]
- [[#plugins][Plugins]]
  - [[#zsh-async][Zsh async]]
  - [[#zsh-nix-shell][Zsh Nix shell]]
  - [[#zsh-nix-completions][zsh-nix-completions]]
  - [[#title][Title]]
  - [[#autosuggestions-and-syntax-highlighting][Autosuggestions and syntax highlighting]]
  - [[#zsh-history-substring-search][Zsh History substring search]]
  - [[#zsh-autocomplete][zsh autocomplete]]
- [[#fixes][Fixes]]
  - [[#kitty-config][Kitty config]]
  - [[#word-navigation][word navigation]]
- [[#configs-from-grml][Configs from grml]]
  - [[#setopt-values][Setopt values]]
- [[#source][Source]]
  - [[#profile][profile]]
- [[#prompts][Prompts]]
  - [[#starship][Starship]]

* Initialize Zinit
#+begin_src shell
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
#+end_src

* Manual way to install plugins
This is the manual way to install plugins, execute this block in a terminal which should clone the plugins
#+begin_src shell :tangle no 
mkdir ~/.zsh-plugins
cd ~/.zsh-plugins
git clone https://github.com/zsh-users/zsh-completions.git
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
git clone https://github.com/zsh-users/zsh-autosuggestions.git
git clone https://github.com/jeffreytse/zsh-vi-mode.git
git clone https://github.com/zsh-users/zsh-history-substring-search.git
#+end_src

* Setting paths
** ~~/.local/bin/~
#+begin_src shell
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
autoload -U colors && colors
export PATH
#+end_src

* Plugins
** Zsh async 
#+begin_src shell
zinit light mafredri/zsh-async
#+end_src
** Zsh Nix shell
#+begin_src shell
zinit light chisui/zsh-nix-shell
#+end_src
** zsh-nix-completions
#+begin_src shell
zinit light nix-community/nix-zsh-completions
#+end_src
** Title
#+begin_src shell 
DISABLE_AUTO_TITLE="false"
zinit light trystan2k/zsh-tab-title
ZSH_TAB_TITLE_ADDITIONAL_TERMS='alacritty|kitty|foot'
#+end_src
** Autosuggestions and syntax highlighting
#+begin_src shell
export ZSH_AUTOSUGGEST_USE_ASYNC=true
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=#6272a4'

zinit wait lucid for \
 atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
    zdharma-continuum/fast-syntax-highlighting \
 atload"!_zsh_autosuggest_start" \
    zsh-users/zsh-autosuggestions
#+end_src
** Zsh History substring search
#+begin_src shell 
zinit light "zsh-users/zsh-history-substring-search"
#+end_src
** zsh autocomplete
#+begin_src shell 
zinit light marlonrichert/zsh-autocomplete
#+end_src

* Fixes
** Kitty config
#+begin_src shell
export KITTY_SHELL_INTEGRATION=no-cursor
#+end_src
** word navigation
#+begin_src shell
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word
#+end_src

* Configs from grml
** Setopt values
#+begin_src shell
# set some important options (as early as possible)

# append history list to the history file; this is the default but we make sure
# because it's required for share_history.
setopt append_history

# import new commands from the history file also in other zsh-session
setopt share_history

# save each command's beginning timestamp and the duration to the history file
setopt extended_history

# If a new command line being added to the history list duplicates an older
# one, the older command is removed from the list
setopt histignorealldups

# remove command lines from the history list when the first character on the
# line is a space
setopt histignorespace

# if a command is issued that can't be executed as a normal command, and the
# command is the name of a directory, perform the cd command to that directory.
setopt auto_cd

# in order to use #, ~ and ^ for filename generation grep word
# *~(*.gz|*.bz|*.bz2|*.zip|*.Z) -> searches for word not in compressed files
# don't forget to quote '^', '~' and '#'!
setopt extended_glob

# display PID when suspending processes as well
setopt longlistjobs

# report the status of backgrounds jobs immediately
setopt notify

# whenever a command completion is attempted, make sure the entire command path
# is hashed first.
setopt hash_list_all

# not just at the end
setopt completeinword

# Don't send SIGHUP to background processes when the zsh exits.
setopt nohup

# make cd push the old directory onto the directory stack.
setopt auto_pushd

# avoid "beep"ing
setopt nobeep

# don't push the same dir twice.
setopt pushd_ignore_dups

# * shouldn't match dotfiles. ever.
setopt noglobdots

# use zsh style word splitting
setopt noshwordsplit

# don't error out when unset parameters are used
setopt unset
#+end_src
* Source
** profile
#+begin_src shell
source ~/dotfiles/.profile
#+end_src


* Prompts
** Starship
#+begin_src shell
eval "$(starship init zsh)"
export STARSHIP_CONFIG=~/dotfiles/config/starship.toml
precmd() {
    precmd() {
        echo
    }
}
#+end_src
