# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
      ./packages.nix
      ../graphics/amd.nix
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = ["amdgpu"];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];
  boot.kernelParams = [
    "amdgpu.msi=0"
    "amdgpu.aspm=0"
    "amdgpu.runpm=0"
    "amdgpu.bapm=0"
    "amdgpu.vm_update_mode=0"
    "amdgpu.exp_hw_support=1"
    "amdgpu.sched_jobs=64"
    "amdgpu.sched_hw_submission=4"
    "amdgpu.lbpw=0"
    "amdgpu.mes=1"
    "amdgpu.mes_kiq=1"
    "amdgpu.sched_policy=1"
    "amdgpu.ignore_crat=1"
    "amdgpu.no_system_mem_limit"
    "amdgpu.smu_pptable_id=0"
  ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/2adf1ce4-49aa-4c82-a7f5-2273006ecd1b";
      fsType = "btrfs";
      options = ["subvol=root" "compress=zstd:8" "noatime" "nodiratime" "ssd_spread" "discard=async" "space_cache=v2"];

    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/2adf1ce4-49aa-4c82-a7f5-2273006ecd1b";
      fsType = "btrfs";
      options = ["subvol=home" "compress=zstd:8" "noatime" "nodiratime" "ssd_spread" "discard=async" "space_cache=v2"];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/2adf1ce4-49aa-4c82-a7f5-2273006ecd1b";
      fsType = "btrfs";
      options = ["subvol=nix" "compress=zstd:8" "noatime" "nodiratime" "ssd_spread" "discard=async" "space_cache=v2"];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/DA66-740E";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [ ];

  networking.hostName = "nixos-desktop";
  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  #networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp11s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp12s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  services.hardware = {
    openrgb = {
      enable = true;
      motherboard = "amd";
      package = pkgs.openrgb-with-all-plugins;
    };
  };
  environment.systemPackages = with pkgs; [
    i2c-tools
  ];
  users.groups.i2c.members = [ "drishal" ];
  services.sunshine = {
    enable = true;
    autoStart = false;
    capSysAdmin = true;
    openFirewall = true;
  };


}
